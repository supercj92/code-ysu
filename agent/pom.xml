<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.cfysu</groupId>
    <artifactId>code-ysu-agent</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>code-ysu-agent</name>
    <url>http://maven.apache.org</url>
    <properties>
        <aspectj.version>1.7.2</aspectj.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.1.41</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>code-ysu-agent</finalName>


        <!--将工程打包为可执行jar包-->
        <plugins>

            <!--方案一：springboot 打包插件。将依赖和功能class打包到fatjar，先启动springboot laucher，再通过工程main方法启动-->
            <!--<plugin>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
                <!--<version>1.5.6.RELEASE</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>repackage</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!--方案二：使用这个插件也可以打包依赖，不过打包后会降依赖的jar包解压缩后和项目的字节码文件放到同一个目录-->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.cfysu.agent.Attach</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--方案三：将依赖拷贝的lib目录。然后通过制定在manifest中指定classpath来执行jar。这种方式依赖本地jar，放到别的机器上无法运行-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-jar-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<archive>-->
                        <!--<manifest>-->
                            <!--<addClasspath>true</addClasspath>-->
                            <!--<classpathPrefix>lib/</classpathPrefix>-->
                            <!--<mainClass>com.cfysu.agent.Attach</mainClass>-->
                        <!--</manifest>-->
                        <!--<manifestEntries>-->
                            <!--<Agent-Class>-->
                                <!--com.cfysu.agent.Attach-->
                            <!--</Agent-Class>-->
                            <!--<Premain-Class>-->
                                <!--com.cfysu.agent.Attach-->
                            <!--</Premain-Class>-->
                        <!--</manifestEntries>-->
                    <!--</archive>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <!--&lt;!&ndash; 拷贝依赖的jar包到lib目录 &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-dependency-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>copy</id>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>copy-dependencies</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<outputDirectory>-->
                                <!--${project.build.directory}/lib-->
                            <!--</outputDirectory>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>
